/*
 * TacOS Source Code
 *    Tokuyama kousen Advanced educational Computer.
 *
 * Copyright (C) 2011-2016 by
 *                      Dept. of Computer Science and Electronic Engineering,
 *                      Tokuyama College of Technology, JAPAN
 *
 *   上記著作権者は，Free Software Foundation によって公開されている GNU 一般公
 * 衆利用許諾契約書バージョン２に記述されている条件を満たす場合に限り，本ソース
 * コード(本ソースコードを改変したものを含む．以下同様)を使用・複製・改変・再配
 * 布することを無償で許諾する．
 *
 *   本ソースコードは＊全くの無保証＊で提供されるものである。上記著作権者および
 * 関連機関・個人は本ソースコードに関して，その適用可能性も含めて，いかなる保証
 * も行わない．また，本ソースコードの利用により直接的または間接的に生じたいかな
 * る損害に関しても，その責任を負わない．
 *
 *
 */

/*
 * ls/ls.cmm : ls プログラム
 *
 * 2016.01.10 : ファイル名表示の桁数指定
 * 2015.12.02 : FS の見直しに伴い、一部修正
 * 2015.07.01 : 新規開発
 *
 * $Id$
 *
 */

#include <syslib.h>
#include <lib.h>

Dir dir = {"            ", 0, 0, 0, 0 };        // 一時使用領域

// ファイルの一覧を出力する
// 「ls」のみ入力された場合はルートディレクトリ("/")の一覧を出力
public int main(int argc, char[][] argv) {

  // argv[1] がディレクトリ名か確認する
  boolean period = false;                       // '.' が含まれているか
  for (int i=0; argv[1][i]!='\0'; i=i+1)
    if (argv[1][i]=='.') {period=true; break;} 
  if (period) {                                 // '.' が含まれていたら
    printf("Usage:ls <dirName>\n");             //   引数がディレクトリでない
    return 0;
  }

  int fd;
  if  (argc==1) fd = open("/", READ);           // ルートディレクトリ
  else          fd = open(argv[1], READ);       // ディレクトリを OPEN
  if (fd<0)                                     // ディレクトリが見つからない
    printf("can't open Dir \"%s\"\n", argv[1]); //   メッセージを出力
  else {                                        // ディレクトリが見つかった
    printf("FileNameExt Attr Clst FileLength\n");
    while (readDir(fd, dir)>0)                  // ファイルが続くまで
      printf("%11s 0x%02x %4d 0x%04x%04x\n",    //   ファイルの一覧を出力
                    dir.name, dir.attr, dir.clst, dir.lenH, dir.lenL);
  }

  close(fd);
  return 0;
}
