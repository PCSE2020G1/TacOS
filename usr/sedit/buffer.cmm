#include <stdio.hmm>
#include <stdlib.hmm>
#include <string.hmm>
#include "buffer.hmm"

public char[][] textBuffer = array(LINES, BUFLEN+1); // 書き込まれた文字保存用
char[] clipboard = array(BUFLEN+1);

// 初期化
public void bufferInit(){
  lines = 1;
}

// 新しい行追加
public void insertLine(int row, int column){
  if (lines-1 >= LINES){
    return;
  }

  // 最後の行から現在の行の次までずらす
  for(int i = lines-1; i > column; i = i - 1){
    strCpy(textBuffer[i+1], textBuffer[i]);
  }

  // 行の途中で挿入されたとき
  int i=0, j=row;
  while ((textBuffer[column+1][i]=textBuffer[column][j])!='\0') {
    i = i + 1;
    j = j + 1;
  }
  textBuffer[column][row]='\0';
  lines = lines + 1;
}

// 文字挿入
public void insertChar(char ch, int row, int column){
  int length = strLen(textBuffer[column]); // 挿入前の文字列の長さ
  // 画面サイズを超える
  if (length >= BUFLEN){
    return;
  }

  // 挿入部分からずらす
  for(int i = length; i >= row; i = i - 1){
    textBuffer[column][i + 1] = textBuffer[column][i];
  }

  textBuffer[column][row] = ch;
}

// 文字削除
public void removeChar(int row, int column){
  int length = strLen(textBuffer[column]);
  // 後ろの文字を詰める
  for(int i = row; i <= length; i = i + 1){
    textBuffer[column][i-1] = textBuffer[column][i];
  }
}

// 行削除
public void removeLine(int row, int column){
  // その行の長さが０もしくはカーソル位置が左端なら後ろの行から詰める
  if(column == 0){
    return;
  }
  // 後ろに文字がある
  if(row == 0 && strLen(textBuffer[column]) != 0){
    int x = 0;
    // 文字を後ろからずらす
    for(int i = strLen(textBuffer[column-1]); i + x < BUFLEN; i = i + 1){
      textBuffer[column-1][i] = textBuffer[column][x];
      if(textBuffer[column][x] == '\0'){
        break;
      }
      x = x + 1;
    }
    // 行の内容をクリア
    textBuffer[column][0] = '\0';
  }
  // 行をずらす
  for (int i = column; i < lines-1; i = i + 1){
    strCpy(textBuffer[i], textBuffer[i+1]);
  }
  textBuffer[lines-1][0] = '\0';
  lines = lines - 1;
}

public void cutLine(int row, int column){
  for(int i = 0; i < BUFLEN; i = i + 1){
    clipboard[i] = '\0';
  }
  int length = strLen(textBuffer[column]);
  for(int i = 0; i < length - row; i = i + 1){
    clipboard[i] = textBuffer[column][row + i];
  }
  textBuffer[column][row] = '\0';
}

public void pasteLine(int row, int column){
  for(int i = 0; i < strLen(clipboard); i=i+1){
    if(clipboard[i] == '\0' || row + i == BUFLEN){
      break;
    }
    insertChar(clipboard[i], row+i, column);
  }
}
