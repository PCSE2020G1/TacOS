#include <stdio.hmm>
#include <stdlib.hmm>
#include <string.hmm>
#include "buffer.hmm"

public char[][] textBuffer = array(LINES, BUFLEN); // 書き込まれた文字保存用
char[] clipboard = array(BUFLEN);

// 初期化
public void b_init(){
  lines = 0;
}

// 新しい行追加
public void insertLine(int line, int column){
  lines = lines + 1;
  int y = column;
  // 行の挿入の場合は現在行から後ろをずらす
  if (column+1 != lines){
    for(int i = lines; i > y+1; i = i - 1){
      strCpy(textBuffer[i], textBuffer[i-1]);
    }
    for (int i = 0; i < BUFLEN; i = i + 1){
      textBuffer[y][i] = '\0';
    }
    y = y + 1;
  }

  if(line != strLen(textBuffer[y])){
    int length = strLen(textBuffer[y]);
    for(int i = 0; line + i < length; i = i + 1){
      insertChar(textBuffer[y][line+i], i, y+1);
      textBuffer[y][line+i] = '\0';
    }
  }
}

// 文字挿入
public void insertChar(char ch, int line, int column){
  int length = strLen(textBuffer[column]); // 挿入後の文字数
  // 入力する場所が右端
  if (length == BUFLEN){
    insertLine(line, column);
    length = 1; // 挿入後の文字数
  }

  for(int i = length; i > line; i = i - 1){
    textBuffer[column][i] = textBuffer[column][i-1];
  }
  textBuffer[column][line] = ch;
}

// 文字削除
public void removeChar(int line, int column){
  // その行の内容が０なら後ろの行から詰める
  if(strLen(textBuffer[column]) == 0 || line == 0){
    if(column == 0){
      return;
    }
    // 後ろに文字がある
    if(line == 0 && strLen(textBuffer[column])!= 0){
      int x = 0;
      for(int i = strLen(textBuffer[column-1])-1; i < BUFLEN; i = i + 1){
        textBuffer[column-1][i] = textBuffer[column][x];
        x = x + 1;
        if(textBuffer[column][x] == '\0') {
          break;
        }
      }
      for(int i = 0; i < BUFLEN; i = i + 1){
        textBuffer[column][i] = '\0';
      }
    }
    for (int i = column; i < lines-1; i = i + 1){
      strCpy(textBuffer[i], textBuffer[i+1]);
    }
    lines = lines - 1;
  } else {
    // 後ろの文字を詰める
    for(int i = line; i < strLen(textBuffer[column]); i = i + 1){
      textBuffer[column][i-1] = textBuffer[column][i];
    }
    // 最後の文字はnullにする
    textBuffer[column][strLen(textBuffer[column])-1] = '\0';
  }
}

public void cutLine(int line, int column){
  for(int i = 0; i < BUFLEN; i=i+1){
    clipboard[i] = '\0';
  }
  for(int i = 0; i < strLen(textBuffer[column])-line; i=i+1){
    clipboard[i] = textBuffer[column][line + i];
  }
}

public void pasteLine(int line, int column){
  for(int i = 0; i < strLen(clipboard); i=i+1){
    if(clipboard[i] == '\0' || line+i == BUFLEN){
      break;
    }
    insertChar(clipboard[i], line+i, column);
  }
}
