/*
 * TacOS Source Code
 *    Tokuyama kousen Advanced educational Computer.
 *
 * Copyright (C) 2019 by
 *                      Dept. of Computer Science and Electronic Engineering,
 *                      Tokuyama College of Technology, JAPAN
 *
 *   上記著作権者は，Free Software Foundation によって公開されている GNU 一般公
 * 衆利用許諾契約書バージョン２に記述されている条件を満たす場合に限り，本ソース
 * コード(本ソースコードを改変したものを含む．以下同様)を使用・複製・改変・再配
 * 布することを無償で許諾する．
 *
 *   本ソースコードは＊全くの無保証＊で提供されるものである。上記著作権者および
 * 関連機関・個人は本ソースコードに関して，その適用可能性も含めて，いかなる保証
 * も行わない．また，本ソースコードの利用により直接的または間接的に生じたいかな
 * る損害に関しても，その責任を負わない．
 *
 *
 */

 /*
  * ss/ss.cmm : ファイル送信プログラム
  *
  * 2019.01.28 : 新規作成
  *
  * $Id$
  *
  */

#include <stdio.hmm>
#include <stdlib.hmm>
#include <string.hmm>

#define BLOCK_SIZE 60
#define BUFFER_SIZE 128
#define ACK '!'

#define DEBUG(...) if (debugOut != null) fprintf(debugOut, __VA_ARGS__)

int[] filesize = array(2);
char[] buffer = array(BUFFER_SIZE);
FILE debugOut = null;

void waitForAck();

public int main(int argc, char[][] argv){
  if (argc < 2) { /* ファイル名がない */
    fprintf(stderr, "Usage: %s <filename> [<as filename> [<debug output>]]\n", argv[0]);
    return 1;
  }

  if (argc >= 4) {
    debugOut = fopen(argv[3], "w"); /* デバッグ出力をオープン */
  }

  /* ファイル長を取得 */
  if (fsize(argv[1], filesize)){
    perror(argv[1]);
    return 1;
  }

  DEBUG("open file %s\n", argv[1]);
  FILE fp = fopen(argv[1], "r");
  if (fp == null){ /* ファイルがない */
    DEBUG("fopen error\n");
    perror(argv[1]);
    return 1;
  }

  char[] filename = argv[1];
  if (argc==3) filename = argv[2];

  DEBUG("filename = %s\n", filename);
  printf("%s\n", filename); /* ファイル名を出力 */
  DEBUG("filesize = %d\n", filesize[1]);
  printf("%d\n", filesize[1]); /* ファイル長の下位32bit */
  DEBUG("blocksize = %d\n", BLOCK_SIZE);
  printf("%d\n", BLOCK_SIZE); /* ブロックサイズ */
  fflush(stdout);

  waitForAck();                             // 相手が RAW モードになるのを待つ
  // 以降 RAW モード
  int wholelen = 0;
  int length = 0;
  while (!feof(fp)){
    char c = fgetc(fp);
    fputc(c, stdout);
    length = length + 1;

    if (length == BLOCK_SIZE){
      waitForAck();
      wholelen = wholelen + length;
      length = 0;
      DEBUG("sent: %d / %d\n", wholelen, filesize[1]);
    }
  }

  DEBUG("sent: %d / %d\n", wholelen + length, filesize[1]);

  DEBUG("complete\n");

  return 0;
}

void waitForAck(){
  /* Ackを待つ */
  for (;;) {
    char ack = fgetc(stdin);
    if (ack == ACK) break;
  }
}
