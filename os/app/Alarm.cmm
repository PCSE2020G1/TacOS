/*
 * TacOS Source Code
 *    Tokuyama kousen Advanced educational Computer.
 *
 * Copyright (C) 2020 by
 *                      Dept. of Computer Science and Electronic Engineering,
 *                      Tokuyama College of Technology, JAPAN
 *
 *   上記著作権者は，Free Software Foundation によって公開されている GNU 一般公
 * 衆利用許諾契約書バージョン２に記述されている条件を満たす場合に限り，本ソース
 * コード(本ソースコードを改変したものを含む．以下同様)を使用・複製・改変・再配
 * 布することを無償で許諾する．
 *
 *   本ソースコードは＊全くの無保証＊で提供されるものである。上記著作権者および
 * 関連機関・個人は本ソースコードに関して，その適用可能性も含めて，いかなる保証
 * も行わない．また，本ソースコードの利用により直接的または間接的に生じたいかな
 * る損害に関しても，その責任を負わない．
 *
 *
 */

/*
 * mp3Proc.cmm : MP3 デコーダのドライバ
 *
 * 2020.08.30 : 新規作成
 *
 * $Id$
 *
 */

#include "mp3Proc.hmm"
#include "../util/crt0.hmm"

#include "../kernel/kernel.hmm"
#include "../fs/fs.hmm"
#include "../util/util.hmm"
#include "spi.hmm"
#include "lcd.hmm"

int alarmtime;                              //カウントダウンする時間を持つ
boolean alarmflag = false;
//アラーム機能がオンになっているか．戻り値0でアラーム実行,戻り値1で何かしらの理由でアラームが解除されたこと示す

// レスポンス
#define OK  0
#define ERR 1

//1秒タイマー
public void timer1s(int timer){

  for(int i=0; i<timer; i=i+1){  //指定秒数回
    for(int k=0; k<10; k=k+1){   //1s=0.1s*10回
      out(0x00,0x64); //0番地に100ms(=0.1s)
    }
  } //Lcdに何かする？
}

// ここからプロセスの実行が始まる
public boolean alarm(){
  alarmflag = true;

  //曲名リストをlcdへ
  //時間入力画面をlcdへ

  timer =
  timer1s(timer);             //ユーザが指定した時間を渡す
  for(;;){
    if(//止まれ//){
      stop();
      alarmflag = false;
    } else if(//鳴らせ//){
      play(mp3FilesGetPath);
    }
  }
}

//alarmが呼ばれて
//1秒タイマー関数へ
//ユーザ指定の値をTimerレジスタに
//指定秒経過したら音源再生
//STOPで停止
//横１６．縦８
