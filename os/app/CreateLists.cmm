/*
 * TacOS Source Code
 *    Tokuyama kousen Advanced educational Computer.
 *
 * Copyright (C) 2020 by
 *                      Dept. of Computer Science and Electronic Engineering,
 *                      Tokuyama College of Technology, JAPAN
 *
 *   上記著作権者は，Free Software Foundation によって公開されている GNU 一般公
 * 衆利用許諾契約書バージョン２に記述されている条件を満たす場合に限り，本ソース
 * コード(本ソースコードを改変したものを含む．以下同様)を使用・複製・改変・再配
 * 布することを無償で許諾する．
 *
 *   本ソースコードは＊全くの無保証＊で提供されるものである。上記著作権者および
 * 関連機関・個人は本ソースコードに関して，その適用可能性も含めて，いかなる保証
 * も行わない．また，本ソースコードの利用により直接的または間接的に生じたいかな
 * る損害に関しても，その責任を負わない．
 *
 *
 */

/*
 * mp3Files.cmm : MP3ファイルの一覧
 *
 * 2020.11.20 : 新規作成
 *
 * $Id$
 *
 */

#include <stdio.hmm>
#include <stdlib.hmm>
#include <string.hmm>
#include <fs.hmm>
#include <util.hmm>
#include "appUtil.hmm"
#include "mp3Files.hmm"

#define FILE_SIZE 128 //オリジナルリストに含まれる曲の最大数

//public char[][] index_file; 構造体宣言したから多分いらなくなった
public int[][] list = array(10, 100); //サイズは適当
//list = {{1, 4, 5, 10}, {2, 3, 6}, {1, 2, 7, 8}};みたいなイメージ

char[] list_file = array(FILE_SIZE); //リスト名を格納する一次変数


public void ListCreateInt(){
    FILE fp;
    for(int t=1;t<=5;t=t+1){
        strCpy(list_file, "list_");
        strCat(list_file, chr(t+ord('0')));
        strCat(list_file, ".csv");
        if((fp=fopen(list_file, "r"))!=null){
            //各行を処理する
            int n = 0;
            for(int i=0; fgets(str, N, fp)!=null; i=i+1){
                //曲のidを取り出す
                strCpy(str, deleteStr(str, n+1));
                n = strChr(str, ',');
                strNcpy(tmp_str, str, n+1);
                list_file[t][i] = atoi(tmp_str);               
            }
            printf("%d\n", list[t]);
        }
    }
}


public char[][] IndexCreate(char[][] file){

    return null;
}


public void FileManage(index_type[] index_file){
    
}


public char[] ListCreate(index_type[] index_file){

    return null;
}

public void ListManage(char[] list_file){

}
